package com.integracion.crud.security.dto;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;

import com.integracion.crud.model.entity.Usuario;
import com.integracion.crud.security.enums.RolNombre;

public class UsuarioPrincipalDto implements UserDetails {
	private static final long serialVersionUID = 1L;
	private String username;
    private String password;
    private Collection<? extends GrantedAuthority> authorities;

    public UsuarioPrincipalDto(String email, String password, Collection<? extends GrantedAuthority> authorities) {
        this.username = email;
        this.password = password;
        this.authorities = authorities;
    }

    
	//	return new User(usuario.getUsername(), usuario.getPassword(), usuario.getEnabled(), true, true, true, authorities);
    public static UsuarioPrincipalDto buildOLD(Usuario usuario){
    	List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();
    	usuario.getRoles().forEach(rol ->{
    		authorities.add(new SimpleGrantedAuthority(rol.getRolNombre().name()));	
    	});
        return new UsuarioPrincipalDto(usuario.getEmail(), usuario.getPassword(), authorities);
    }
    
    
    public static User build(Usuario usuario){
    	List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();
    	usuario.getRoles().forEach(rol ->{
    		authorities.add(new SimpleGrantedAuthority(rol.getRolNombre().name()));	
    	});
        return new User(usuario.getEmail(), usuario.getPassword(), usuario.isIsactive(), true, true, true, authorities);
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return authorities;
    }

    @Override
    public String getPassword() {
        return password;
    }

    @Override
    public String getUsername() {
        return username;
    }

    @Override
    public boolean isAccountNonExpired() {
        return true;
    }

    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }

	public void setUsername(String username) {
		this.username = username;
	}

	public void setPassword(String password) {
		this.password = password;
	}


    
    
}
